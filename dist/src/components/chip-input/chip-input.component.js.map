{"version":3,"file":"chip-input.component.js","sourceRoot":"","sources":["../../../../src/components/chip-input/chip-input.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAC,KAAK,EAAE,KAAK,EAAC,MAAM,uBAAuB,CAAC;AAEnD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;;IA2B3C;6BAT0B,IAAI,YAAY,EAAE;kCAEhB,CAAC,KAAK,EAAE,KAAK,CAAC;uBAEhC,IAAI;0BACD,IAAI;yBACL,IAAI;yBACJ,IAAI;KAEC;IAEjB,qCAAQ,GAAR;QACE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;KAChC;IAED,wCAAW,GAAX,UAAY,MAAW;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACjC;IAED,gCAAG,GAAH,UAAI,KAAwB;QAC1B,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;QAG1B,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;SAC1C;;QAGD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SAClB;KAEF;IAED,mCAAM,GAAN,UAAO,KAAU;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC7B;;gBArDF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,mrBASkB;iBAC7B;;;;;2BAEE,KAAK,SAAC,QAAQ;2BACd,KAAK,SAAC,QAAQ;kCACd,MAAM;;6BArBT;;SAkBa,kBAAkB","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {ENTER, COMMA} from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-chip-input',\n  template: `<mat-form-field class=\"demo-chip-list\">\n              <mat-chip-list #chipList>\n                <mat-chip *ngFor=\"let instance of iModel.controls; index as i\" [selectable]=\"selectable\" [removable]=\"removable\" (remove)=\"remove(i)\">\n                  {{instance.value}}\n                  <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n                </mat-chip>\n                <input [placeholder]=\"ui.label\" [matChipInputFor]=\"chipList\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\n                  (matChipInputTokenEnd)=\"add($event)\" />\n              </mat-chip-list>\n            </mat-form-field>`\n})\nexport class ChipInputComponent implements OnInit {\n  @Input('iModel') iModel: any;\n  @Input('schema') schema: any;\n  @Output() ngModelChange = new EventEmitter();\n  public ui: any;\n  public separatorKeysCodes = [ENTER, COMMA];\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.ui = this.schema.ui ||Â {};\n  }\n\n  updateModel($event: any) {\n    this.ngModelChange.emit($event);\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.iModel.push(new FormControl(value));\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n  }\n\n  remove(index: any): void {\n    this.iModel.removeAt(index);\n  }\n}\n"]}