[{"__symbolic":"module","version":4,"metadata":{"MultiselectComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"app-multiselect","template":"\n    <mat-form-field>\n      <mat-select\n        [placeholder]=\"label\"\n        [(ngModel)]=\"transformediModel\"\n        (ngModelChange)=\"updateModel($event)\"\n        multiple\n      >\n        <mat-option *ngFor=\"let entry of schema.enum\" [value]=\"entry\">{{\n          entry\n        }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-error *ngIf=\"control?.errors?.required && control?.touched\"\n      >Dieser Wert ist eine Pflichtangabe.</mat-error\n    >\n    <mat-error *ngIf=\"control?.errors?.minNumber\"\n      >Es müssen mindestens\n      {{ control.errors.minNumber.requiredElements }} Elemente ausgewählt\n      werden.</mat-error\n    >\n    <mat-error *ngIf=\"control?.errors?.enumValidator\"\n      >Dieser Wert ist nicht zulässig. Erlaubte Werte sind:\n      {{ control.errors.enumValidator.allowedValues.join(\", \") }}</mat-error\n    >\n  "}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3},"arguments":["control"]}]}],"iModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3},"arguments":["iModel"]}]}],"schema":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3},"arguments":["schema"]}]}],"ngModelChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":36,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"updateModel":[{"__symbolic":"method"}]}}}}]