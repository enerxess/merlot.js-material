{"version":3,"file":"input.component.js","sourceRoot":"","sources":["../../../../src/components/input/input.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;;IA+C7E;6BAH0B,IAAI,YAAY,EAAE;KAG5B;IAEhB,iCAAQ,GAAR;QACE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;KAChC;IAED,sBAAI,iCAAK;aAAT;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;aAC7B;YAAC,IAAI;gBAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;SAC7B;;;OAAA;IAED,oCAAW,GAAX,UAAY,MAAW;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACjC;;gBA3DF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,o0CAkCT;iBACF;;;;;4BAEE,KAAK,SAAC,SAAS;2BACf,KAAK,SAAC,QAAQ;2BACd,KAAK,SAAC,QAAQ;kCACd,MAAM;;yBA5CT;;SAwCa,cAAc","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n@Component({\n  selector: \"app-input\",\n  template: `\n    <mat-form-field>\n      <input\n        matInput\n        [placeholder]=\"label\"\n        [(ngModel)]=\"iModel\"\n        (ngModelChange)=\"updateModel($event)\"\n      />\n    </mat-form-field>\n    <mat-error *ngIf=\"control?.errors?.required && control?.touched\"\n      >Dieser Wert ist eine Pflichtangabe.</mat-error\n    >\n    <mat-error *ngIf=\"control?.errors?.min && control?.touched\"\n      >Dieser Zahlenwert darf nicht kleiner als\n      {{ control.errors.min.min }} sein.</mat-error\n    >\n    <mat-error *ngIf=\"control?.errors?.max && control?.touched\"\n      >Dieser Zahlenwert darf nicht größer als\n      {{ control.errors.max.max }} sein.</mat-error\n    >\n    <mat-error *ngIf=\"control?.errors?.minlength && control?.touched\"\n      >Dieser Wert muss mindestens\n      {{ control.errors.minlength.requiredLength }} Zeichen lang\n      sein.</mat-error\n    >\n    <mat-error *ngIf=\"control?.errors?.maxlength && control?.touched\"\n      >Dieser Wert darf höchstens\n      {{ control.errors.maxlength.requiredLength }} Zeichen lang\n      sein.</mat-error\n    >\n    <mat-error *ngIf=\"control?.errors?.enumValidator && control?.touched\"\n      >Dieser Wert ist nicht zulässig. Erlaubte Werte sind:\n      {{ control.errors.enumValidator.allowedValues.join(\", \") }}</mat-error\n    >\n  `\n})\nexport class InputComponent implements OnInit {\n  @Input(\"control\") control: FormControl | any;\n  @Input(\"iModel\") iModel: any;\n  @Input(\"schema\") schema: any;\n  @Output() ngModelChange = new EventEmitter();\n  public ui: any;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.ui = this.schema.ui || {};\n  }\n\n  get label() {\n    if (this.schema.required && this.ui.label) {\n      return this.ui.label + \" *\";\n    } else return this.ui.label;\n  }\n\n  updateModel($event: any) {\n    this.ngModelChange.emit($event);\n  }\n}\n"]}